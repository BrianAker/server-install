---
- set_fact: profile_d="{{ User.home }}/.profile.d"
  sudo: yes
  sudo_user: "{{ User.name }}"

- file: state=directory
        path="{{ User.home }}/.bazaar/plugins"
  sudo: yes
  sudo_user: "{{ User.name }}"

- name: setup authorized_key
  sudo: yes
  ignore_errors: yes
  authorized_key: user="{{ User.name }}"
                  key="{{ lookup('file', '/' + inventory_dir + '/public_keys/' + User.name) }}"

- name: reset mode for authorized_keys
  file: path="{{ User.home }}/.ssh/authorized_keys"
        mode=0600
  sudo: yes
  sudo_user: "{{ User.name }}"
  when: "'{{ inventory_hostname }}' != 'localhost'"

- file: path="{{ profile_d }}"
        mode=0750
        state=directory
  sudo: yes
  sudo_user: "{{ User.name }}"

- name: copy in specific
  template: src="{{ item }}.j2"
            dest="{{ profile_d }}/{{ item }}"
            mode=0600
            validate='bash -n %s'
  with_items:
    - customrc
    - pythonrc
    - perlrc
    - rubyrc
  sudo: yes
  sudo_user: "{{ User.name }}"

- name: copy in specific
  template: src="{{ item }}.j2"
            dest="{{ profile_d }}/{{ item }}"
            mode=0600
            validate='bash -n %s'
  with_items:
    - pkgngrc
  when: ansible_distribution in ('FreeBSD')
  sudo: yes
  sudo_user: "{{ User.name }}"

- name: copy in specific
  template: src="{{ item }}.j2"
            dest="{{ profile_d }}/{{ item }}"
            mode=0600
            validate='bash -n %s'
  with_items:
    - sbinrc
  when: ansible_distribution in ('Debian')
  sudo: yes
  sudo_user: "{{ User.name }}"

- name: copy in OSX specific
  template: src="{{ item }}.j2"
            dest="{{ profile_d }}/{{ item }}"
            mode=0600
            validate='bash -n %s'
  with_items:
    - brewrc
    - localrc
    - javarc
  when: ansible_distribution in ('MacOSX')
  sudo: yes
  sudo_user: "{{ User.name }}"

- name: copy in specific
  template: src="{{ item }}.j2"
            dest="{{ profile_d }}/{{ item }}"
            mode=0600
            validate='bash -n %s'
  with_items:
    - keychainrc
  when: keychain == True
  sudo: yes
  sudo_user: "{{ User.name }}"

- name: Reconfigure path for user to include customrc
  lineinfile: dest="{{ User.home }}/.bash_profile"
              regexp="^. ~/.customrc"
              line=". ~/.customrc"
              mode=0700
              state=present
              create=yes
  sudo: yes
  sudo_user: "{{ User.name }}"
