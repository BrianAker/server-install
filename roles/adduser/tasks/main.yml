---

- name: create user
  sudo: yes
  user: name="{{ username }}"
        state=present
        shell=/bin/bash

- name: create ssh key
  sudo: yes
  user: name={{ username }}
        generate_ssh_key=yes

- name: touch authorized_keys
  sudo: yes
  copy: src=files/authorized_keys
        force=no
        dest="~{{ username }}/.ssh/authorized_keys"
        owner="{{ username }}"
        group="{{ username }}"
        mode=0600

- name: setup authorized_key from file
  sudo: yes
  ignore_errors: yes
  authorized_key: user="{{ username }}"
                  key="{{ lookup('file', '/' + inventory_dir + '/public_keys/' + username) }}"

- name: reset mode for authorized_keys
  sudo: yes
  file: path="~{{ username }}/.ssh/authorized_keys"
        owner="{{ username }}"
        group="{{ username }}"
        mode=0600

- name: add user to sshd AllowUsers
  sudo: yes
  lineinfile: dest=/etc/ssh/sshd_config 
              regexp="^AllowUsers {{ username }}"
              line="AllowUsers {{ username }}"
              state=present

- name: write the deploy sudoers file
  sudo: yes
  template: src=sudoer.j2
            dest="/etc/sudoers.d/{{ username }}"
            owner=root 
            group=root 
            mode=0440
            validate='visudo -cf %s'
  when: is_admin

- name: copy in pythonrc
  sudo: yes
  copy: src=templates/pythonrc.j2 
        dest="~{{ username }}/.pythonrc"
        owner={{ username }}
        group={{ username }}
        mode=0600


- name: Reconfigure path for deploy user to include pythonrc
  sudo: yes
  lineinfile: dest="~{{ username }}/.bash_profile"
              insertbefore="^export PATH"
              regexp="^. ~/.pythonrc"
              line=". ~/.pythonrc"
              owner="{{ username }}"
              group="{{ username }}"
              mode=0700
              state=present
              create=yes

- name: install local pip packages for user
  sudo: yes
  sudo_user: "{{ username }}"
  pip: name={{ item }}
       virtualenv="~{{ username }}/.python"
       state=present
  with_items: pip_packages
