---

- name: create deploy user
  sudo: yes
  user: name={{ deploy_user }}
        state=present
        comment="Deploy User"
        shell=/bin/bash
  when: ansible_distribution != 'MacOSX'

- name: Ensure the user has a ssh key
  sudo: yes
  user: name={{ deploy_user }} generate_ssh_key=yes
  when: ansible_distribution != 'MacOSX'

- name: touch authorized_keys
  sudo: yes
  copy: src=files/authorized_keys
        dest="~{{ deploy_user }}/.ssh/authorized_keys"
        owner="{{ deploy_user }}"
        group="{{ deploy_user }}"
        mode=0600

- name: setup deploy authorized_key
  sudo: yes
  authorized_key: user="{{ deploy_user }}"
                  key="{{ lookup('file', 'public_keys/deploy') }}"
  when: ansible_distribution != 'MacOSX'

- name: copy in pythonrc
  sudo: yes
  copy: src=templates/pythonrc 
        dest=/home/{{ deploy_user }}/.pythonrc
        owner={{ deploy_user }}
        group={{ deploy_user }}
        mode=0600
  when: ansible_distribution != 'MacOSX'

- name: Reconfigure path for deploy user to include pythonrc
  sudo: yes
  lineinfile: dest="/home/{{ deploy_user }}/.profile"
              regexp="^. ~/.pythonrc"
              line=". ~/.pythonrc"
              state=present
              create=yes
  when: ansible_distribution != 'MacOSX'

- name: write the deploy sudoers file
  sudo: yes
  template: src=sudoer.j2
            dest=/etc/sudoers.d/{{ deploy_user }}
            owner=root 
            group=root 
            mode=0440
            validate='visudo -cf %s'
  when: ansible_distribution != 'MacOSX'

- name: Reconfigure SSH to not allow root login
  sudo: yes
  lineinfile: dest=/etc/ssh/sshd_config 
              regexp="^AllowUsers {{ deploy_user }}"
              line="AllowUsers {{ deploy_user }}"
  when: ansible_distribution != 'MacOSX'

- include: debian.yml
  when: ansible_os_family == 'Debian'

