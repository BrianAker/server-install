---

- name: create deploy user
  sudo: yes
  user: name="{{ deploy_user }}"
        generate_ssh_key=yes
        state=present
        comment="Deploy User"
        shell=/bin/bash

- name: setup deploy authorized key
  sudo: yes
  authorized_key: user="{{ deploy_user }}"
                  key="{{ lookup('file','public_keys/deploy') }}"

- name: setup exec deploy authorized_key
  sudo: yes
  authorized_key: user="{{ deploy_user }}"
                  key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: copy in pythonrc
  sudo: yes
  copy: src=templates/pythonrc 
        dest="/home/{{ deploy_user }}/.pythonrc"
        owner="{{ deploy_user }}"
        mode=0600

- name: Reconfigure path for deploy user to include pythonrc
  sudo: yes
  lineinfile: dest="/home/{{ deploy_user }}/.profile"
              regexp="^. ~/.pythonrc"
              line=". ~/.pythonrc"
              state=present
              create=yes

- name: copy in sbinrc
  sudo: yes
  copy: src=templates/pythonrc 
        dest="/home/{{ deploy_user }}/.sbinrc"
        owner="{{ deploy_user }}"
        mode=0600
  when: ansible_distribution == 'Debian'

- name: Reconfigure path for deploy user to include pythonrc
  sudo: yes
  lineinfile: dest="/home/{{ deploy_user }}/.profile"
              regexp="^. ~/.sbinrc"
              line=". ~/.sbinrc"
              state=present
              create=yes
  when: ansible_os_family == 'Debian'

- name: write the deploy sudoers file
  sudo: yes
  template: src=sudoer.j2
            dest="/etc/sudoers.d/{{ deploy_user }}"
            owner=root 
            group=root 
            mode=0440

- name: Reconfigure SSH to not allow root login
  sudo: yes
  lineinfile: dest=/etc/ssh/sshd_config 
              regexp="^AllowUsers {{ deploy_user }}"
              line="AllowUsers {{ deploy_user }}"

- name: remove legacy deploy
  sudo: yes
  user: name=ansible
        state=absent
        remove=yes
        force=yes
