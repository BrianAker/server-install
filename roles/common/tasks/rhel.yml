---

- name: Add epel repository
  sudo: yes
  yum: name=http://mirror.pnl.gov/epel/6/x86_64/epel-release-6-8.noarch.rpm state=present
  when: ansible_distribution == 'CentOS'

- name: Create the GPG key for EPEL
  copy: src=RPM-GPG-KEY-EPEL-6 dest=/etc/pki/rpm-gpg
  when: ansible_distribution == 'CentOS' and ansible_distribution_version == '6.4'

- name: install basic software
  sudo: yes
  yum: name={{ item }}  state=present
  with_items:
    - '@minimal-environment'
    - '@system-tools'
    - redhat-lsb-core
    - python-setuptools
    - curl
    - sudo
    - fakeroot
    - git
    - make
    - perl
    - pkgconfig
    - python
    - ruby
    - tar
    - traceroute
    - vim
    - wget
    - yum-cron

- name: set selinux
  sudo: yes
  selinux: state=disabled
# Older method.
# lineinfile: dest=/etc/selinux/config regexp=^SELINUX= line=SELINUX=disabled

- name: install fedora basic software
  yum: name={{ item }}  state=present
  sudo: yes
  with_items:
    - denyhosts
    - firewalld
    - keychain
    - net-tools
    - system-config-network
    - yum-fastestmirror
  when: ansible_distribution == 'Fedora'

- name: start denyhosts
  sudo: yes
  service: name=denyhosts
           state=restarted
           enabled=yes
  when: ansible_distribution == 'Fedora'

- name: install updatesd
  sudo: yes
  yum: name={{ item }} state=present
  with_items:
    - yum-updatesd
  when: ansible_distribution == 'Fedora'

- name: Reconfigure updatesd to install updates
  sudo: yes
  lineinfile: dest=/etc/yum/yum-updatesd.conf
              regexp="^do_update"
              line="do_update = yes"
  when: ansible_distribution == 'Fedora'
  notify: restart updatesd

- name: Reconfigure updatesd to install updates
  sudo: yes
  lineinfile: dest=/etc/yum/yum-updatesd.conf
              regexp="^do_download"
              line="do_download = yes"
  when: ansible_distribution == 'Fedora'
  notify: restart updatesd

- name: Reconfigure updatesd to install updates
  sudo: yes
  lineinfile: dest=/etc/yum/yum-updatesd.conf
              regexp="^do_download_deps"
              line="do_download_deps = yes"
  when: ansible_distribution == 'Fedora'
  notify: restart updatesd

- name: Check if sysconfig yum-crom exists
  stat: path=/etc/sysconfig/yum-cron
  register: check_yum_cron

- name: Check if sysconfig yum-cron.conf exists
  stat: path=/etc/yum/yum-cron.conf
  register: check_yum_cron_conf

- name: Reconfigure yum-cron to not just check
  sudo: yes
  lineinfile: dest=/etc/sysconfig/yum-cron
              regexp="^CHECK_ONLY"
              line="CHECK_ONLY=no"
  when: check_yum_cron.stat.exists

- name: Reconfigure yum-cron to not just download
  sudo: yes
  lineinfile: dest=/etc/sysconfig/yum-cron
              regexp="^DOWNLOAD_ONLY"
              line="DOWNLOAD_ONLY=no"
  when: check_yum_cron.stat.exists

- name: Reconfigure yum-cron.conf to not just check
  sudo: yes
  lineinfile: dest=/etc/yum/yum-cron.conf
              regexp="^apply_updates"
              line="apply_updates=yes"
  when: check_yum_cron_conf.stat.exists

- name: Reconfigure yum-cron.conf to not just download
  sudo: yes
  lineinfile: dest=/etc/yum/yum-cron.conf
              regexp="^download_only"
              line="download_only=no"
  when: check_yum_cron_conf.stat.exists

- name: start yum-cron
  sudo: yes
  service: name=yum-cron
           state=restarted
           enabled=yes

- name: yum remove software
  sudo: yes
  yum: name={{ item }} state=absent
  ignore_errors: yes
  with_items:
    - BackupPC
  when: ansible_distribution == 'Fedora'
