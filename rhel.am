# vim:ft=automake
#

include $(srcdir)/bundle.am
include $(srcdir)/projects.am

PKG_INSTALLER:= sudo yum install -y
PKG_UPDATE:= sudo yum update -y
PKG_UPGRADE:= sudo yum upgrade -y

.PHONY: pkg_update
pkg_update:
	$(PKG_UPDATE)
	$(PKG_UPGRADE)

.PHONY: mysqld
mysqld: /usr/libexec/mysqld /var/run/mysqld /usr/include/mysql/mysql.h /usr/bin/mysql

/usr/libexec/mysqld:
	$(PKG_INSTALLER) mysql-server

/var/run/mysqld:
	sudo chkconfig mysqld on
	sudo service mysqld start

/usr/bin/mysql:
	$(PKG_INSTALLER) mysql

/usr/share/mysql:
	$(PKG_INSTALLER) mysql-lib

/usr/include/mysql/mysql.h:
	$(PKG_INSTALLER) mysql-devel

DAEMONS:= memcached httpd vsftpd
.PHONY: $(DAEMONS)
$(DAEMONS):
	-$(PKG_INSTALLER) $@
	sudo chkconfig $@ on
	sudo service $@ start

$(PREP): 
	-$(PKG_INSTALLER) $(@F)

.PHONY: mercurial
mercurial: /usr/bin/hg
/usr/bin/hg:
	-$(PKG_INSTALLER) hg

.PHONY: prep
prep: | $(PREP) pkg_update
	-$(PKG_INSTALLER) yum-plugin-ps yum-plugin-remove-with-leaves
	-$(PKG_INSTALLER) yum-plugin-auto-update-debug-info

# Keep yum updated
.PHONY: yum-cron
yum-cron:
	-$(PKG_INSTALLER) yum-plugin-fastestmirror yum-cron PackageKit-yum PackageKit-yum-plugin
	@if test -x /bin/chkconfig; then \
	  sudo chkconfig yum-cron on ; \
	  sudo service yum-cron start; \
	  elif test -x /usr/sbin/chkconfig; then \
	  sudo /usr/sbin/chkconfig yum-cron on ; \
	  sudo service yum-cron restart ; \
	  elif test -x /sbin/chkconfig; then \
	  sudo /sbin/chkconfig yum-cron on ; \
	  sudo service yum-cron restart ; \
	  fi

.PHONY: updatesd
updatesd:

COMPILER:= /usr/bin/gcc /usr/bin/make /usr/bin/bison /usr/bin/flex /usr/bin/autoconf /usr/bin/libtool
$(COMPILER): 
	$(PKG_INSTALLER) $(@F)

.PHONY: g++
g++: /usr/bin/g++
/usr/bin/g++: 
	$(PKG_INSTALLER) gcc-c++

.PHONY: compiler
compiler: $(COMPILER) g++ protobuf-bundle

$(DEV_TOOLS_REQUIRED): 
	$(PKG_INSTALLER) $(@F)

.PHONY: jenkins-slave
jenkins-slave: /usr/bin/java

.PHONY: python-sphinx
python-sphinx: /usr/bin/sphinx-build
/usr/bin/sphinx-build:
	$(PKG_INSTALLER) $(@F)

#Basic build tools
.PHONY: build_essential
build_essential: $(DEV_TOOLS_REQUIRED) compiler python-sphinx /usr/bin/rpmbuild
	-$(PKG_INSTALLER) xorg-x11-server-Xvfb

PROTOBUF:= protobuf protobuf-compiler protobuf-devel

/usr/bin/java:
	-$(PKG_INSTALLER) java-1.7.0-openjdk-devel java-1.7.0-openjdk
	-$(PKG_INSTALLER) dejavu-fonts-common dejavu-sans-fonts

LIBRARIES:= libevent libcurl libuuid boost zlib pcre pam libgcrypt readline openssl cyrus-sasl

libraries: | $(LIBRARIES)
$(LIBRARIES):
	-$(PKG_INSTALLER) $@ $@-devel

# Set time
.PHONY: time
time:
	-$(PKG_INSTALLER) ntpdate
	-$(PKG_INSTALLER) ntp
	sudo ntpdate time.apple.com

/usr/bin/rpmbuild:
	-$(PKG_INSTALLER) rpm-build

/usr/sbin/qpidd: /usr/bin/qpid-python-test
	-$(PKG_INSTALLER) qpid-cpp-server

/usr/bin/qpid-python-test: 
	-$(PKG_INSTALLER) python-qpid-qmf

.PHONY: qpid
qpid: /usr/sbin/qpidd /usr/bin/qpid-python-test
	-sudo chkconfig qpidd on
	-sudo service qpidd start

.PHONY: libvirt
libvirt:
	-$(PKG_INSTALLER) libvirt-daemon-config-network libvirt-daemon-config-nwfilter
	-sudo chkconfig libvirtd on
	-sudo service libvirtd start


.PHONY: smtp
smtp:
	-$(PKG_INSTALLER) sendmail sendmail-cf
	-sudo chkconfig sendmail on
	-sudo service sendmail start

.PHONY: post
post:

.PHONY: restart-iptables
restart-iptables:
	sudo service iptables restart

.PHONY: security
security: yum-cron

ssh-import-id: /usr/bin/ssh-import-id
/usr/bin/ssh-import-id:
	sudo easy_install ssh-import-id
