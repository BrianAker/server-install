# vim:ft=automake

BASE_INSTALL_PATH= /usr/
EXE_BASE_INSTALL_PATH= $(BASE_INSTALL_PATH)bin/

include $(srcdir)bundle.am
include $(srcdir)projects.am

PKG_INSTALLER:= apt-get install --yes
PKG_UPDATE:= apt-get update --yes 2>&1 > /dev/null
PKG_UPGRADE:= apt-get upgrade --yes 2>&1 > /dev/null
PKG_SEARCH_INSTALL= $(PKG_INSTALLER) $(1) || (apt-file search --package-only --fixed-string $(1) | sudo xargs $(PKG_INSTALLER))

PIP= pip
PIP_INSTALL= $(PIP) install --quiet

VPATH = /usr/bin:/usr/local/bin

BASE_LOCAL+= apt-file

prep-local:
	-$(PKG_INSTALLER) python-software-properties

.PHONY: pkg_update
pkg_update:
	-@apt-get clean
	-@apt-get --purge -y remove byobu
	@$(PKG_UPDATE)
	@$(PKG_UPGRADE)
	@$(PKG_UPDATE)
	@$(PKG_UPGRADE)
	@$(PKG_INSTALLER) apt-file
	@apt-file update 2>&1 > /dev/null
	@apt-get autoremove -y

BASE_DEV_HOOK+= $(DAEMONS)
DAEMONS:= memcached apache2 vsftpd
.PHONY: $(DAEMONS)
$(DAEMONS):
	-$(PKG_INSTALLER) $@

BASE_DEV_LOCAL+= mingw
BASE_DEV_LOCAL+= protobuf-bundle
BASE_DEV_LOCAL+= protobuf-compiler

sphinx-build:
	$(PKG_INSTALLER) python-sphinx
	-$(PIP) sphinxcontrib-googleanalytics

BASE_DEV_LOCAL+= build_essential
build_essential: /usr/bin/c++
	$(PKG_INSTALLER) build-essential
	$(PKG_INSTALLER) git-core
	$(PKG_INSTALLER) devscripts
	-$(PKG_INSTALLER) cloog-ppl

EXTRA_DEV_LOCAL+= libcloog-ppl0

BASE_DEV_LOCAL+= mingw
.PHONY: mingw
	$(PKG_INSTALLER) .*mingw-w64*

ssh-import-id:
	$(PKG_INSTALLER) ssh-import-id || $(PIP) ssh-import-id

BASE_DEV_LOCAL+= /usr/sbin/mysqld
/usr/sbin/mysqld:
	$(PKG_INSTALLER) mysql-server

BASE_DEV_LOCAL+= /usr/sbin/rabbitmq-server
/usr/sbin/rabbitmq-server:
	$(PKG_INSTALLER) rabbitmq-server

# Jenkins install, we don't actually use this, we let Jenkins install its own.
jenkins-slave:
	$(PKG_INSTALLER) default-jdk default-jre default-jre-headless
	$(PKG_INSTALLER) maven

BASE_DEV_HOOK+= $(LIBRARIES)
LIBRARIES:= libboost-all libcurl4-openssl libevent libpam0g libpcre3 libreadline uuid libssl

$(LIBRARIES):
	$(PKG_INSTALLER) $@-dev

BASE_DEV_LOCAL+= $(CLANG)
CLANG:=  clang-devel clang-analyzer llvm-devel llvm-libs llvm
.PHONY: clang-bundle
clang-bundle: $(CLANG)
$(CLANG):
	-$(PKG_INSTALLER) $(@F)

BASE_DEV_LOCAL+= $(PROTOBUF)
PROTOBUF:= libprotobuf-dev protobuf-compiler

# Update automatically
update:
	$(PKG_INSTALLER) update-manager-core
	$(PKG_INSTALLER) cron-apt
	$(PKG_INSTALLER) unattended-upgrades
	dpkg-reconfigure -plow unattended-upgrades

.PHONY: time
time:
	-$(PKG_INSTALLER) ntp ntpdate
	#ntpdate time.apple.com

post:
	apt-get autoremove --yes

jenkins-server:
	wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
	sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
	$(PKG_UPDATE)
	$(PKG_INSTALLER) jenkins

security:
	-$(PKG_INSTALLER) denyhosts
	-$(PKG_INSTALLER) fail2ban

pip:
	-$(PKG_INSTALLER) python-pip

java:
	-$(PKG_INSTALLER) default-jdk default-jre-headless

include $(srcdir)local.am
