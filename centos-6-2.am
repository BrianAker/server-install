# vim:ft=automake
#

include $(srcdir)bundle.am
include $(srcdir)projects.am

PKG_INSTALLER:= yum install -y
PKG_UPDATE:= yum update -y
PKG_UPGRADE:= yum upgrade -y
PKG_SEARCH_INSTALL= $(PKG_INSTALLER) $(1) || (yum whatprovides -q *bin/$(1) | head -1 | cut -d : -f 1 | xargs $(PKG_INSTALLER))
PIP= python-pip
PIP_INSTALL= $(PIP) install --quiet

VPATH = /usr/bin

.PHONY: pkg_update
pkg_update:
	$(PKG_UPDATE)
	$(PKG_UPGRADE)

.PHONY: mysqld
mysqld: /usr/libexec/mysqld /var/run/mysqld /usr/include/mysql/mysql.h /usr/bin/mysql

/usr/libexec/mysqld:
	$(PKG_INSTALLER) mysql-server

/var/run/mysqld:
	chkconfig mysqld on
	service mysqld start

/usr/bin/mysql:
	$(PKG_INSTALLER) mysql

/usr/share/mysql:
	$(PKG_INSTALLER) mysql-lib

/usr/include/mysql/mysql.h:
	$(PKG_INSTALLER) mysql-devel

DAEMONS:= memcached httpd vsftpd
.PHONY: $(DAEMONS)
$(DAEMONS):
	-$(PKG_INSTALLER) $@
	chkconfig $@ on
	service $@ start

prep-local:

.PHONY: pkg_update
pkg_update: $(PIP)

# Keep yum updated
.PHONY: yum-cron
yum-cron:
	-$(PKG_INSTALLER) yum-plugin-fastestmirror yum-cron PackageKit-yum PackageKit-yum-plugin
	@if test -x /bin/chkconfig; then \
	  chkconfig yum-cron on ; \
	  service yum-cron start; \
	  elif test -x /usr/sbin/chkconfig; then \
	  /usr/sbin/chkconfig yum-cron on ; \
	  service yum-cron restart ; \
	  elif test -x /sbin/chkconfig; then \
	  /sbin/chkconfig yum-cron on ; \
	  service yum-cron restart ; \
	  fi

python-sphinx: /usr/bin/sphinx-build
/usr/bin/sphinx-build:
	$(PIP_INSTALL) sphinx

BASE_DEV_HOOK+= compiler-other 

BASE_DEV_LOCAL+= $(PROTOBUF)
PROTOBUF:= protobuf protobuf-compiler protobuf-devel

BASE_DEV_LOCAL+= /usr/bin/java
/usr/bin/java:
	-$(PKG_INSTALLER) java-1.7.0-openjdk-devel java-1.7.0-openjdk
	-$(PKG_INSTALLER) dejavu-fonts-common dejavu-sans-fonts

LIBRARIES:= libevent libcurl libuuid boost zlib pcre pam libgcrypt readline openssl cyrus-sasl

BASE_DEV_HOOK+= libraries
libraries: | $(LIBRARIES)
$(LIBRARIES):
	-$(PKG_INSTALLER) $@ $@-devel

BASE_DEV_LOCAL+= rpmbuild
/usr/bin/rpmbuild:
	-$(PKG_INSTALLER) rpm-build

.PHONY: post
post:

EXTRA_HOOK+= security
.PHONY: security
security: yum-cron

python-pip:
	easy_install pip

ssh-import-id:
	$(PIP_INSTALL)  ssh-import-id

include $(srcdir)local.am
