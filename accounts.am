# vim:ft=automake
#

#Add Brian
brian: 
	$(MAKE) -f useradd.am CREATE_USER=brian CREATE_USER_SSH_KEY_URL=https://launchpad.net/%7Ebrianaker/+sshkeys

yazz: 
	$(MAKE) -f useradd.am CREATE_USER=yazz CREATE_USER_SSH_KEY_URL=https://launchpad.net/%7EEentropyworks/+sshkeys

linuxjedi: 
	$(MAKE) -f useradd.am CREATE_USER=linuxjedi CREATE_USER_SSH_KEY_URL=https://launchpad.net/%7Elinuxjedi/+sshkeys

pcrews: 
	$(MAKE) -f useradd.am CREATE_USER=pcrews CREATE_USER_SSH_KEY_URL=https://launchpad.net/%7Epatrick-crews/+sshkeys

mark: 
	$(MAKE) -f useradd.am CREATE_USER=mark CREATE_USER_SSH_KEY_URL=https://launchpad.net/%7Efallenpegasus/+sshkeys
#Add Kent
kent: /etc/sudoers.d/
	sudo useradd --shell=/bin/bash kent
	sudo mkdir -p -m 0700  ~kent/.ssh
	sudo touch ~kent/.ssh/authorized_keys2
	sudo curl -a --output ~kent/.ssh/authorized_keys2 https://launchpad.net/%7Ekent/+sshkeys 
	sudo chmod 600 ~kent/.ssh/authorized_keys2
	sudo chown -R kent.kent ~kent/

hingo:
	sudo useradd --shell=/bin/bash hingo
	sudo mkdir -p -m 0700  ~hingo/.ssh
	sudo touch ~hingo/.ssh/authorized_keys2
	sudo curl -a --output ~hingo/.ssh/authorized_keys2 https://launchpad.net/~hingo/+sshkeys
	sudo chmod 600 ~hingo/.ssh/authorized_keys2
	sudo chown -R hingo.hingo ~hingo/
	touch /tmp/hingo
	echo "hingo    ALL = NOPASSWD: ALL" >> /tmp/hingo
	sudo chown root.root /tmp/hingo
	sudo chmod 0440 /tmp/hingo
	sudo mv /tmp/hingo /etc/sudoers.d/hingo
	#usermod -G wheel hingo


#Add DrizzleCI/Jenkins
drizzleci: jenkins-account jenkins-account-setup drizzle-keys jenkins-sync-authorized-keys jenkins-fix-permissions jenkins-sudo

tangentci: jenkins-account jenkins-account-setup tangent-keys jenkins-sync-authorized-keys jenkins-fix-permissions jenkins-sudo

wordpress: brian secure-host


jenkins-account:
	if [ ! -d /home/jenkins ]; then \
	  sudo groupadd --gid 800 jenkins; \
	  sudo useradd --shell=/bin/bash --uid 800 --gid 800 jenkins; \
	fi

/usr/bin/bzr:
	if [ -x /usr/bin/apt-get ]; then \
	  sudo apt-get install --yes bzr; \
	if [ -x /usr/bin/yum ]; then \
	  sudo yum install -y bzr; \
	fi

jenkins-account-setup: /usr/bin/bzr
	if [ ! -d ~jenkins/.ssh ]; then sudo mkdir -p -m 0700 ~jenkins/.ssh; fi
	if [ ! -d ~jenkins/workspace ]; then sudo mkdir -p -m 0700 ~jenkins/.ssh; fi
	if [ ! -d /home/jenkins/workspace/.bzr ]; then sudo bzr init-repo ~jenkins/workspace; fi
	sudo touch ~jenkins/.ssh/authorized_keys2
	sudo chmod 600 ~jenkins/.ssh/authorized_keys2
	sudo curl --append --output ~jenkins/.ssh/drizzle_authorized_keys2 https://launchpad.net/~ci-o/+sshkeys
	sudo curl --append --output ~jenkins/.ssh/tangent_authorized_keys2 https://launchpad.net/~d-ci/+sshkeys

drizzle-keys:
	sudo sh -c "cat ~jenkins/.ssh/drizzle_authorized_keys2 >> ~jenkins/.ssh/authorized_keys2"
	sudo sh -c "echo \"\" >> ~jenkins/.ssh/authorized_keys2"
	sudo sh -c "cat ~jenkins/.ssh/tangent_authorized_keys2 >> ~jenkins/.ssh/authorized_keys2"
	sudo sh -c "echo \"\" >> ~jenkins/.ssh/authorized_keys2"

tangent-keys:
	sudo sh -c "cat ~jenkins/.ssh/tangent_authorized_keys2 >> ~jenkins/.ssh/authorized_keys2"

jenkins-fix-permissions:
	sudo chown -R jenkins.jenkins ~jenkins/

jenkins-sync-authorized-keys:
	sudo cp ~jenkins/.ssh/authorized_keys2 ~jenkins/.ssh/authorized_keys
	sudo chmod 600 ~jenkins/.ssh/authorized_keys

jenkins-sudo:
	if [ ! -f /etc/sudoers.d/jenkins ]; then \
	  touch /tmp/jenkins; \
	  echo "jenkins    ALL = NOPASSWD: ALL" >> /tmp/jenkins; \
	  sudo chown root.root /tmp/jenkins; \
	  sudo chmod 0440 /tmp/jenkins; \
	  sudo mv /tmp/jenkins /etc/sudoers.d/jenkins; \
	fi
	if [ -f /etc/redhat-release ]; then sudo usermod -G wheel jenkins; fi
	if [ -f /etc/debconf.conf ]; then sudo usermod -G sudo jenkins; fi

# Shutdown password authentication 
sudoers-inc:
	touch /tmp/sudo-include
	echo "#includedir /etc/sudoers.d" > /tmp/sudo-include
	sudo sh -c "cat /tmp/sudo-include  >> /etc/sudoers"
	sudo visudo -q -c -f /etc/sudoers
	rm /tmp/sudo-include

secure: secure-fix
	if [ -x /usr/bin/systemctl ]; then \
	  sudo /usr/bin/systemctl restart sshd.service; \
	elif [ -x /bin/systemctl ]; then \
	  sudo /bin/systemctl restart sshd.service; \
	elif [ -x /sbin/service ]; then \
	  sudo /sbin/service sshd restart ; \
	elif [ -x /sbin/restart ]; then \
	  sudo restart ssh; \
	fi

secure-fix:
	sudo sed -i -e's/PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
	sudo sed -i -e's/#PasswordAuthentication no/PasswordAuthentication no/' /etc/ssh/sshd_config
	sudo sed -i -e's/PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
	sudo sed -i -e's/#PermitRootLogin no/PermitRootLogin no/' /etc/ssh/sshd_config
	sudo sed -i -e's/PermitEmptyPasswords yes/PermitEmptyPasswords no/' /etc/ssh/sshd_config
	sudo sed -i -e's/#PermitEmptyPasswords no/PermitEmptyPasswords no/' /etc/ssh/sshd_config
	sudo sed -i -e's/PubkeyAuthentication no/PubkeyAuthentication yes/' /etc/ssh/sshd_config
	sudo sed -i -e's/#PubkeyAuthentication yes/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
	sudo sed -i -e's/#LogLevel INFO/LogLevel INFO/' /etc/ssh/sshd_config

tcp-wrappers:
	sudo sh -c "echo sshd:216.39.139.192,216.39.139.194,216.39.139.195,174.143.244.111,98.129.238.122,174.143.242.18 >> /etc/hosts.allow"
	sudo sh -c "echo sshd:50.197.78.110 >> /etc/hosts.allow"
	sudo sh -c "echo ALL:ALL >> /etc/hosts.deny"

secure-host: secure sudoers-inc tcp-wrappers
	@echo done
