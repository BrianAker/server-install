# vim:ft=automake
#

#include $(srcdir)useradd.am

.PHONY: brian yazz linuxjedi pcrews mark drizzleci tangentci lazlo wordpress sudoers-inc secure secure-fix tcp-wrappers secure-host

#Add Brian
brian: 
	$(MAKE) CREATE_USER=brian CREATE_USER_SSH_KEY_URL=brianaker admin-user

yazz: 
	$(MAKE) CREATE_USER=yazz CREATE_USER_SSH_KEY_URL=entropyworks admin-user

linuxjedi: 
	$(MAKE) CREATE_USER=linuxjedi CREATE_USER_SSH_KEY_URL=https://launchpad.net/%7Elinuxjedi/+sshkeys admin-user

pcrews: 
	$(MAKE) CREATE_USER=pcrews CREATE_USER_SSH_KEY_URL=https://launchpad.net/%7Epatrick-crews/+sshkeys admin-user

capttofu:
	$(MAKE) CREATE_USER=capttofu CREATE_USER_SSH_KEY_URL=capttofu admin-user

mark: 
	$(MAKE) CREATE_USER=mark CREATE_USER_SSH_KEY_URL=https://launchpad.net/%7Efallenpegasus/+sshkeys admin-user


#Add DrizzleCI/Jenkins
drizzleci:
	$(MAKE) CREATE_USER=jenkins CREATE_USER_SSH_KEY_URL=drizzle-continuous-integration user

tangentci:
	echo ${FEDORA_RELEASE}
	$(MAKE) CREATE_USER=jenkins CREATE_USER_SSH_KEY_URL=d-ci user

bazaar:
	$(MAKE) CREATE_USER=bazaar daemon-user

lazlo:
	$(MAKE) CREATE_USER=lazlo CREATE_USER_SSH_KEY_URL=d-ci admin-user
	if [ -f /etc/redhat-release ]; then usermod -G wheel lazlo; fi
	if [ -f /etc/debconf.conf ]; then usermod -G sudo lazlo; fi

wordpress: brian secure-host

# Shutdown password authentication 
sudoers-inc:
	touch /tmp/sudo-include
	echo "#includedir /etc/sudoers.d" > /tmp/sudo-include
	sh -c "cat /tmp/sudo-include  >> /etc/sudoers"
	visudo -q -c -f /etc/sudoers
	rm /tmp/sudo-include

secure: secure-fix
	if [ -x /usr/bin/systemctl ]; then \
	  /usr/bin/systemctl restart sshd.service; \
	elif [ -x /bin/systemctl ]; then \
	  /bin/systemctl restart sshd.service; \
	elif [ -x /sbin/service ]; then \
	  /sbin/service sshd restart ; \
	elif [ -x /sbin/restart ]; then \
	  restart ssh; \
	fi

secure-fix:
	sed -i -e's/PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
	sed -i -e's/#PasswordAuthentication no/PasswordAuthentication no/' /etc/ssh/sshd_config
	sed -i -e's/PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config
	sed -i -e's/#PermitRootLogin no/PermitRootLogin no/' /etc/ssh/sshd_config
	sed -i -e's/PermitEmptyPasswords yes/PermitEmptyPasswords no/' /etc/ssh/sshd_config
	sed -i -e's/#PermitEmptyPasswords no/PermitEmptyPasswords no/' /etc/ssh/sshd_config
	sed -i -e's/PubkeyAuthentication no/PubkeyAuthentication yes/' /etc/ssh/sshd_config
	sed -i -e's/#PubkeyAuthentication yes/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
	sed -i -e's/#LogLevel INFO/LogLevel INFO/' /etc/ssh/sshd_config
	sed -i -e's/#AuthorizedKeysFile.*ssh\/authorized_keys2/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
	sed -i -e's/AuthorizedKeysFile.*ssh\/authorized_keys2/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
	sed -i -e's/#AuthorizedKeysFile.*ssh\/authorized_keys/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config

tcp-wrappers:
	sh -c "echo sshd:50.197.78.110 >> /etc/hosts.allow"
	sh -c "echo sshd:166.78.10.183 >> /etc/hosts.allow"
	sh -c "echo sshd:174.143.242.18 >> /etc/hosts.allow"
	sh -c "echo sshd:174.143.244.111 >> /etc/hosts.allow"
	sh -c "echo sshd:216.39.139.192 >> /etc/hosts.allow"
	sh -c "echo sshd:216.39.139.193 >> /etc/hosts.allow"
	sh -c "echo sshd:216.39.139.194 >> /etc/hosts.allow"
	sh -c "echo sshd:216.39.139.195 >> /etc/hosts.allow"
	sh -c "echo sshd:50.197.78.105 >> /etc/hosts.allow"
	sh -c "echo sshd:50.197.78.106 >> /etc/hosts.allow"
	sh -c "echo sshd:50.197.78.107 >> /etc/hosts.allow"
	sh -c "echo sshd:50.197.78.108 >> /etc/hosts.allow"
	sh -c "echo sshd:50.197.78.109 >> /etc/hosts.allow"
	sh -c "echo sshd:50.197.78.110 >> /etc/hosts.allow"
	sh -c "echo sshd:50.197.78.110 >> /etc/hosts.allow"
	sh -c "echo sshd:98.129.238.122 >> /etc/hosts.allow"
	sh -c "echo sshd:gorf.tangent.org >> /etc/hosts.allow"
	sh -c "echo sshd:jump.tangent.org >> /etc/hosts.allow"
	sh -c "echo sshd:10.0.2.17 >> /etc/hosts.allow"
	sh -c "echo ALL:localhost >> /etc/hosts.allow"
	sh -c "echo ALL:ALL >> /etc/hosts.deny"

secure-host: secure sudoers-inc tcp-wrappers
	@echo done
